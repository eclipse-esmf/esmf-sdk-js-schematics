<form [formGroup]="form" (ngSubmit)="onSubmit()">
    <% for(let property of allProps) { %>
        <% if (property.characteristic.dataType.isScalar) { %>
            <div class="form-group">
                <label for="<%= property.name %>"><%= property.name %></label>

                <% if (property.characteristic instanceof Enumeration) { %>
                    <mat-form-field appearance="fill" id='<%= property.name %>'>
                        <mat-label>Select a <%= property.name %></mat-label>
                        <mat-select formControlName="<%= property.name %>" [required]="<%= !property.isOptional %>">

                        <% for (let value of property.characteristic._values) { %>
                              <mat-option value="<%= value %>">
                                <%= value %>
                              </mat-option>
                        <% } %>

                        </mat-select>
                      </mat-form-field>

                      <% if (!property.isOptional) { %>
                          <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('required') && form.get('<%= property.name %>')?.touched">
                          <%= property.name %> is required.
                       </mat-error>
                    <% } %>
                <% } else if (inputType(property) === 'boolean') { %>
                    <mat-checkbox id="<%= property.name %>" formControlName="<%= property.name %>">{{  form.get('<%= property.name %>')?.value }}</mat-checkbox>
                <% } else { %>
                    <input type="<%= inputType(property) %>" id="<%= property.name %>"
                           formControlName="<%= property.name %>"
                           [required]="<%= !property.isOptional %>"
                           placeholder="<%= property.exampleValue || '' %>">
                    <% if (!property.isOptional) { %>
                        <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('required') && form.get('<%= property.name %>')?.touched">
                            <%= property.name %> is required.
                        </mat-error>
                        <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('min')">
                            <%= property.name %> is to low.
                        </mat-error>
                        <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('max')">
                            <%= property.name %> is to high.
                        </mat-error>
                    <% } %>
                <% } %>
            </div>
        <% } else { %>
            <div formGroupName="<%= property.name %>">
                <fieldset>
                    <legend><%= property.name %></legend>
                    <% for (let dataTypeProperty of property.characteristic.dataType.properties) { %>
                        <div class="form-group">
                            <label for="<%= dataTypeProperty.name %>"><%= dataTypeProperty.name %></label>

                        <% if (dataTypeProperty.characteristic instanceof Enumeration) { %>
                            <mat-form-field appearance="fill" id='<%= dataTypeProperty.name %>'>
                                <mat-label>Select a <%= dataTypeProperty.name %></mat-label>
                                <mat-select formControlName="<%= dataTypeProperty.name %>" [required]="<%= !dataTypeProperty.isOptional %>">

                                <% for (let value of dataTypeProperty.characteristic._values) { %>
                                      <mat-option value="<%= value %>">
                                        <%= value %>
                                      </mat-option>
                                <% } %>

                                </mat-select>
                              </mat-form-field>

                              <% if (!dataTypeProperty.isOptional) { %>
                                  <mat-error *ngIf="getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.hasError('required')
                                               && getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.touched">
                                      <%= dataTypeProperty.name %> is required.
                                  </mat-error>
                            <% } %>
                        <% } else if (inputType(property) === 'boolean') { %>
                                <mat-checkbox id="<%= dataTypeProperty.name %>" formControlName="<%= dataTypeProperty.name %>">{{  form.get('<%= dataTypeProperty.name %>')?.value }}</mat-checkbox>
                            <% } else { %>
                                <input type="<%= inputType(dataTypeProperty) %>" id="<%= dataTypeProperty.name %>"
                                       formControlName="<%= dataTypeProperty.name %>"
                                       [required]="<%= !dataTypeProperty.isOptional %>"
                                       placeholder="<%= dataTypeProperty.exampleValue || '' %>">
                                <% if (!dataTypeProperty.isOptional) { %>
                                    <mat-error *ngIf="getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.hasError('required')
                                                 && getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.touched">
                                        <%= dataTypeProperty.name %> is required.
                                    </mat-error>
                                    <mat-error *ngIf="getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.hasError('min')">
                                        <%= property.name %>: <%= dataTypeProperty.name %> is to low.
                                    </mat-error>
                                    <mat-error *ngIf="getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.hasError('max')">
                                        <%= property.name %>: <%= dataTypeProperty.name %> is to high.
                                    </mat-error>
                                <% } %>
                            <% } %>
                        </div>
                    <% } %>
                </fieldset>
            </div>
        <% } %>
    <% } %>
    <button type="submit" [disabled]="form.invalid">Submit</button>
</form>
