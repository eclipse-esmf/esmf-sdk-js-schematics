<form [formGroup]="form" (ngSubmit)="onSubmit()">
    <% for(let property of allProps) { %>
        <% if (property.characteristic.dataType.isScalar) { %>
            <div class="form-group">
                <% if (property.characteristic instanceof Enumeration) { %>
                    <mat-form-field appearance="fill" id='<%= property.name %>'>
                        <mat-label>Select a <%= property.name %></mat-label>
                        <mat-select formControlName="<%= property.name %>" [required]="<%= !property.isOptional %>">

                        <% for (let value of property.characteristic._values) { %>
                              <mat-option value="<%= value %>">
                                <%= value %>
                              </mat-option>
                        <% } %>

                        </mat-select>
                      </mat-form-field>

                      <% if (!property.isOptional) { %>
                          <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('required') && form.get('<%= property.name %>')?.touched">
                          <%= property.name %> is required.
                       </mat-error>
                    <% } %>
                <% } else if (inputType(property) === 'boolean') { %>
                    <mat-checkbox id="<%= property.name %>" formControlName="<%= property.name %>"><%= property.name %></mat-checkbox>
                <% } else if (inputType(property) === 'date') { %>
                    <mat-form-field>
                        <mat-label>Choose a <%= property.name %></mat-label>
                        <input matInput [matDatepicker]="picker" formControlName="<%= property.name %>">
                        <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>
                        <mat-datepicker #picker></mat-datepicker>

                        <% if (!property.isOptional) { %>
                            <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('required') && form.get('<%= property.name %>')?.touched">
                                <%= property.name %> is required.
                            </mat-error>
                        <% } %>
                    </mat-form-field>
                <% } else { %>
                    <mat-form-field>
                        <mat-label><%= property.name %></mat-label>
                            <input type="<%= inputType(property) %>" matInput
                                   formControlName="<%= property.name %>"
                                   placeholder="<%= property.exampleValue || '' %>">

                            <% if (property.characteristic?.unit?.name) { %>
                                <span matTextSuffix>unit:<%= property.characteristic.unit.name %></span>
                            <% } %>

                            <% if (!property.isOptional) { %>
                                <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('required') && form.get('<%= property.name %>')?.touched">
                                    <%= property.name %> is required.
                                </mat-error>
                            <% } %>

                            <% if (dateTypeValidation(property).length > 0) { %>
                                <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('min')">
                                    <%= property.name %> is to low.
                                </mat-error>
                                <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('max')">
                                    <%= property.name %> is to high.
                                </mat-error>
                            <% } %>
                    </mat-form-field>
                <% } %>
            </div>
        <% } else { %>
            <div formGroupName="<%= property.name %>">
                <fieldset>
                    <legend><%= property.name %></legend>
                    <% for (let dataTypeProperty of property.characteristic.dataType.properties) { %>
                        <div class="form-group">
                            <% if (dataTypeProperty.characteristic instanceof Enumeration) { %>
                                <mat-form-field appearance="fill" id='<%= dataTypeProperty.name %>'>
                                    <mat-label>Select a <%= dataTypeProperty.name %></mat-label>
                                    <mat-select formControlName="<%= dataTypeProperty.name %>" [required]="<%= !dataTypeProperty.isOptional %>">

                                    <% for (let value of dataTypeProperty.characteristic._values) { %>
                                          <mat-option value="<%= value %>">
                                            <%= value %>
                                          </mat-option>
                                    <% } %>

                                    </mat-select>
                                  </mat-form-field>

                                  <% if (!dataTypeProperty.isOptional) { %>
                                      <mat-error *ngIf="getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.hasError('required')
                                                   && getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.touched">
                                          <%= dataTypeProperty.name %> is required.
                                      </mat-error>
                                <% } %>
                            <% } else if (inputType(property) === 'boolean') { %>
                                <mat-checkbox id="<%= dataTypeProperty.name %>" formControlName="<%= dataTypeProperty.name %>"><%= dataTypeProperty.name %></mat-checkbox>
                            <% } else if (inputType(property) === 'date') { %>
                                <mat-form-field>
                                    <mat-label>Choose a <%= dataTypeProperty.name %></mat-label>
                                    <input matInput [matDatepicker]="picker" formControlName="<%= dataTypeProperty.name %>">
                                    <mat-datepicker-toggle matSuffix [for]="picker"></mat-datepicker-toggle>
                                    <mat-datepicker #picker></mat-datepicker>

                                    <% if (!property.isOptional) { %>
                                        <mat-error *ngIf="form.get('<%= property.name %>')?.hasError('required') && form.get('<%= property.name %>')?.touched">
                                            <%= property.name %> is required.
                                        </mat-error>
                                    <% } %>
                                </mat-form-field>
                            <% } else { %>
                                <mat-form-field>
                                    <mat-label><%= dataTypeProperty.name %></mat-label>
                                    <input type="<%= inputType(dataTypeProperty) %>" matInput
                                           formControlName="<%= dataTypeProperty.name %>"
                                           placeholder="<%= dataTypeProperty.exampleValue || '' %>">

                                    <% if (dataTypeProperty.characteristic?.unit?.name) { %>
                                        <span matTextSuffix>unit:<%= dataTypeProperty.characteristic.unit.name %></span>
                                    <% } %>

                                    <% if (!dataTypeProperty.isOptional) { %>
                                        <mat-error *ngIf="getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.hasError('required')
                                                     && getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.touched">
                                            <%= dataTypeProperty.name %> is required.
                                        </mat-error>
                                    <% } %>

                                    <% if (dateTypeValidation(dataTypeProperty).length > 0) { %>
                                        <mat-error *ngIf="getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.hasError('min')">
                                            <%= property.name %>: <%= dataTypeProperty.name %> is to low.
                                        </mat-error>
                                        <mat-error *ngIf="getFormControl('<%= property.name %>', '<%= dataTypeProperty.name %>')?.hasError('max')">
                                            <%= property.name %>: <%= dataTypeProperty.name %> is to high.
                                        </mat-error>
                                    <% } %>
                                </mat-form-field>
                            <% } %>
                        </div>
                    <% } %>
                </fieldset>
            </div>
        <% } %>
    <% } %>

    <button mat-raised-button type="button" color="warn" (click)="onCancel()">Cancel</button>
    <button mat-raised-button type="submit" color="primary" [disabled]="form.invalid">Submit</button>
</form>
