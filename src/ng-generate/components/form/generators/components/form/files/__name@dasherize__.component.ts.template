/** <%= options.generationDisclaimerText %> **/

import {Component, EventEmitter, Output} from '@angular/core';
import {FormBuilder, FormGroup} from '@angular/forms';
<% for (let childConfig of options.childConfigs) {
    %>import {<%= childConfig.name %>FormControl} from "./<%= childConfig.nameDasherized %>/<%= childConfig.nameDasherized %>.component";
<% } %>

@Component({
    selector: '<%= dasherize(name) %>',
    templateUrl: './<%= dasherize(name) %>.component.html',
    styleUrls: ['./<%= dasherize(name) %>.component.scss']
})
export class <%= classify(name) %>Component {
    @Output() formSubmit: EventEmitter<any> = new EventEmitter();
    @Output() formCancel: EventEmitter<void> = new EventEmitter();

    form: FormGroup;

    constructor(private fb: FormBuilder) {
        this.form = this.createFormGroup();
        <% if (options.readOnlyForm) {
            %>this.form.disable();
        <% } %>
    }

    private createFormGroup(): FormGroup {
        return this.fb.group({
            <% for (let childConfig of options.childConfigs) {
                %><%= childConfig.name %>: <%= childConfig.name %>FormControl,
            <% } %>
        });
    }

    onCancel() {
        console.log('Cancel form');
        this.formCancel.emit();
    }

    onSubmit(form: FormGroup) {
        console.log('Form Value:', form.value);
        this.formSubmit.emit(form.value);
    }
}
